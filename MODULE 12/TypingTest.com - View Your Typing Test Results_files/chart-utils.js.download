"use strict";

let color = Chart.helpers.color;

let _isSaveTry = false;
let _dataTryArray = [];

function createConfig(dataArray, greenGradient, blueGradient, backGradient) {

    var pointStyle = 'bar';
    var pointRadius = 0;

    //add empty first val
    dataArray.speed.unshift(0);
    dataArray.date.unshift('');
    dataArray.gspeed.unshift(0);
    dataArray.err.unshift(0);
    dataArray.text.unshift('');

    /*
    //add total vals to 6
    var temp = dataArray.speed.length;
    if (temp < 6){
        for (i = temp; i < 6; i ++){
            dataArray.speed.push(0);
            dataArray.date.push('');
        }
    }
    */

    //calculate max speed and maxY values
    var maxY = 85;
    var maxSpeed = 0;
    for (var i = 0; i < dataArray.speed.length; i ++){
        if (dataArray.speed[i] > maxSpeed) maxSpeed = dataArray.speed[i];
    }
    if (maxSpeed >= 45){
        if (maxSpeed < 90) maxY = 105;
        else maxY = maxSpeed + 15;
    }
    //if ((maxY % 5) > 0) maxY += 5 - (maxY % 5);
    // calculate Y axes gridlines
    var lblWidth = 1;
    var lblWidthArray = [];

    for (var i = 0; i < maxY; i++) {
        if (getWMPLabel(maxY - i) == '') lblWidthArray.push(0);
        else lblWidthArray.push(lblWidth);
    }

    //show Average Typist try <= 4
    var backColorArray = [greenGradient,greenGradient,greenGradient,greenGradient,greenGradient,greenGradient];
    var borderColorArray = ['#53b100','#53b100','#53b100','#53b100','#53b100','#53b100'];
    var labelsColorArray = [];

    for (i = 0; i < 14; i ++) labelsColorArray.push('#FF0000');

    var speedArray = [0,0,0,0,0,0];
    var xLabels = ['','','','','',''];
    for (i = 0; i < dataArray.speed.length; i ++) {

        speedArray[i] = dataArray.speed[i];
        xLabels[i] = dataArray.date[i];

    }

    if (dataArray.speed.length <= 5)
    {
        backColorArray[1] = blueGradient;
        //backColorArray[2] = blueGradient;
        borderColorArray[1] = '#808080';
        //borderColorArray[2] = '#808080';

        speedArray[1] = 36;
        //speedArray[2] = 57;
        xLabels[1] = ['Average','Typist'];
        //xLabels[2] = ['Touch','Typist'];



        for (i = 1; i < 5; i ++)
        {
            if (dataArray.speed.length > i)
            {
                speedArray[i + 1] = dataArray.speed[i];
                xLabels[i + 1] = dataArray.date[i];
            }
        }

        dataArray.speed.unshift(0);
        dataArray.date.unshift('');
        dataArray.gspeed.unshift(0);
        dataArray.err.unshift(0);
        dataArray.text.unshift('');
    }



    return {
        type: 'bar',
        //backgroundColor: "#0000ff",
        data: {
            labels: xLabels,
            //labels: xValues,
            datasets: [{
                label: 'Typing Speed',
                data: speedArray,
                backgroundColor: backColorArray,
                borderWidth: 1,
                borderColor: borderColorArray,
                pointStyle: pointStyle,
                pointRadius: pointRadius,
                pointBorderColor: 'rgb(0, 0, 255)',
                lineTension: 0,
            }
            ]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            legend: {
                display: false,
                position: 'bottom',
                labels: {
                    usePointStyle: true,

                }

            },
            "hover": {
                "animationDuration": 0,
            },
            plugins: {
                datalabels: {
                    color: borderColorArray,
                    anchor: 'end',
                    align: 'end',
                    offset: -5,
                    font: {
                        weight: 'bold',
                        size: 18,
                        family: 'Flexo',
                        style: 'italic',
                    },
                    formatter: function(value, context) {
                        if (value == 0) return '';
                        else return value;
                    }
                }
            },

            scales: {
                xAxes:
                    [{
                        id: 'X',
                        //labels:  xLabels,
                        display: true,
                        barPercentage: 0.7,
                        scaleLabel: {
                            display: false
                        },
                        gridLines:{
                            display: false
                        },
                        ticks: {
                            fontColor: '#156A89',
                            //fontFamily: 'Flexo',
                            //fontStyle: 'normal',
                            //fontColor: labelsColorArray,
                            //fontColor:['rgba(44,44,44,0.8)','rgba(44,44,44,0.8)','rgba(44,44,44,0.8)','rgba(178,31,31,1)','rgba(44,44,44,0.8)','rgba(44,44,44,0.8)','rgba(44,44,44,0.8)','rgba(44,44,44,0.8)'],
                            //fontStyle: 'bold',
                            callback: function(tickValue, index, ticks) {

                                return tickValue;
                            }
                        }
                    },

                        {
                            id: 'X2',
                            type: 'category',
                            labels: [1,2,3,4,5,6,7,8,9, 10, 11, 12, 13, 14],
                            display: false,
                        }


                    ],

                yAxes: [
                    /*
                    {
                    id: 'A',
                    type: 'linear',
                    position: 'left',
                    display: true,
                    scaleLabel: {
                        display: false
                    },
                    gridLines: {
                        display: true,
                        drawBorder: false,
                        drawTicks: false,
                        lineWidth: lblWidthArray,
                    },
                    ticks: {
                        min: 0,
                        max: maxY,
                        stepSize: 1,
                        fontColor: '#156A89',
                        fontStyle: 'bold',
                        padding: -5,
                        callback: function(value, index, values) {
                           return getClassLabel(maxY, value);
                        }
                    }
                },
                    /**/
                    {
                        id: 'B',
                        type: 'linear',
                        position: 'right',
                        display: true,
                        scaleLabel: {
                            display: false
                        },
                        gridLines: {
                            display: true,
                            drawBorder: false,
                            drawTicks: false,
                            lineWidth: lblWidthArray,
                        },
                        ticks: {
                            min: 0,
                            max: maxY,
                            stepSize: 1,
                            fontColor: '#156A89',
                            //fontStyle: 'bold',
                            padding: 2,
                            callback: function(value, index, values) {
                                return getWMPLabel(value);
                            }
                        }

                    }]


            },
            title: {
                display: false
            },
            tooltips: {
                enabled: true,
                callbacks: {
                    label: function (tooltipItem, data) {
                        return "";
                    },
                    title: function (tooltipItem, data) {
                        //console.log(dataArray.text[tooltipItem[0].index]);
                        return dataArray.text[tooltipItem[0].index];
                    },
                    afterBody: function (tooltipItem, data) {
                        var str = [];
                        str.push(tooltipItem[0].label);
                        str.push('WPM: ' + tooltipItem[0].value);
                        if (dataArray.text[tooltipItem[0].index] != '') {
                            str.push('Gross typing speed: ' + dataArray.gspeed[tooltipItem[0].index]);
                            str.push('Errors: ' + dataArray.err[tooltipItem[0].index]);
                        }
                        return str;
                    }
                }
            },

            annotation: {
                annotations: [
                    /**/
                    {//main chart gradient
                        type: 'box',
                        drawTime: 'beforeDatasetsDraw',
                        yScaleID: 'y-axis-0',
                        borderWidth: 0,
                        borderColor: 'rgba(0,0,0,0)',
                        backgroundColor: backGradient,
                    },

                    {//25 grid
                        type: 'line',
                        mode: 'horizontal',
                        drawTime: 'beforeDatasetsDraw',
                        scaleID: 'B',
                        value: 25,
                        borderColor: '#8db0b7',
                        borderWidth: 1,
                    },

                    {//45 grid
                        type: 'line',
                        mode: 'horizontal',
                        drawTime: 'beforeDatasetsDraw',
                        scaleID: 'B',
                        value: 45,
                        borderColor: '#8db0b7',
                        borderWidth: 1,
                    },

                    {//65 grid
                        type: 'line',
                        mode: 'horizontal',
                        drawTime: 'beforeDatasetsDraw',
                        scaleID: 'B',
                        value: 65,
                        borderColor: '#8db0b7',
                        borderWidth: 1,
                    },

                    {//85 grid
                        type: 'line',
                        mode: 'horizontal',
                        drawTime: 'beforeDatasetsDraw',
                        scaleID: 'B',
                        value: 85,
                        borderColor: '#8db0b7',
                        borderWidth: 1,
                    },

                    {//slow
                        type: 'box',
                        drawTime: 'afterDatasetsDraw',
                        xScaleID: 'X2',
                        yScaleID: 'B',
                        borderWidth: 1,
                        borderColor: '#8db0b7',
                        backgroundColor: '#eeffde',
                        xMin: 1,
                        xMax: 3,
                        yMin: 0,
                        yMax: 25,
                        label: {
                            content: 'Slow',
                            enabled: true,
                            fontColor: '#469201',
                            fontSize: '13',
                            yAdjust: 0,
                        },
                    },

                    {//average
                        type: 'box',
                        drawTime: 'afterDatasetsDraw',
                        xScaleID: 'X2',
                        yScaleID: 'B',
                        borderWidth: 1,
                        borderColor: '#8db0b7',
                        backgroundColor: '#dbffbb',
                        xMin: 1,
                        xMax: 3,
                        yMin: 25,
                        yMax: 45,
                        label: {
                            content: 'Average',
                            enabled: true,
                            fontColor: '#3a7801',
                            fontSize: '13',
                            yAdjust: 66,
                        },
                    },

                    {//fluent
                        type: 'box',
                        drawTime: 'afterDatasetsDraw',
                        xScaleID: 'X2',
                        yScaleID: 'B',
                        borderWidth: 1,
                        borderColor: '#8db0b7',
                        backgroundColor: '#bbf28b',
                        xMin: 1,
                        xMax: 3,
                        yMin: 45,
                        yMax: 65,
                        label: {
                            content: 'Fluent',
                            enabled: true,
                            fontColor: '#2f590a',
                            fontSize: '13',
                            yAdjust: 44,
                        },
                    },

                    {//fast
                        type: 'box',
                        drawTime: 'afterDatasetsDraw',
                        xScaleID: 'X2',
                        yScaleID: 'B',
                        borderWidth: 1,
                        borderColor: '#8db0b7',
                        backgroundColor: '#9de75b',
                        xMin: 1,
                        xMax: 3,
                        yMin: 65,
                        yMax: 85,
                        label: {
                            content: 'Fast',
                            enabled: true,
                            fontColor: '#2e550b',
                            fontSize: '13',
                            yAdjust: 22,
                        },
                    },

                    {//pro
                        type: 'box',
                        drawTime: 'afterDatasetsDraw',
                        xScaleID: 'X2',
                        yScaleID: 'B',
                        borderWidth: 1,
                        borderColor: '#8db0b7',
                        backgroundColor: '#83d936',
                        xMin: 1,
                        xMax: 3,
                        yMin: 85,
                        yMax: 105,
                        label: {
                            content: 'PRO',
                            enabled: true,
                            fontColor: '#204600',
                            fontSize: '13',
                            yAdjust: 1,
                        },
                    },
                ],
            }
        }
    };
}

function getClassLabel(maxY, value)
{
    var str = '';
    if (value == 16) str = 'Slow';
    if (value == 34) str = 'Average';
    if (value == 52) str = 'Fluent';

    if (maxY < 80) {
        if (value == 64) str = 'Fast';
    }else
    {
        if (value == 68) str = 'Fast';
    }


    if (value == 86) str = 'Pro';

    str = '';
    return str;
}

function getWMPLabel(value)
{
    var str = '';
    if (value == 25) str = '25';
    if (value == 45) str = '45';
    if (value == 65) str = '65';
    if (value == 85) str = '85';

    return str;
}

function getTextLabel(val)
{
    var str = '';
    if (val === '1swetext.txt') str = 'Svenska';
    if (val === 'aesop.txt') str = 'Aesop';
    if (val === 'astronauts.txt') str = 'Astronauts';
    if (val === 'baseball.txt') str = 'Baseball';
    if (val === 'colomba.txt') str = 'Français';
    if (val === 'cornelia.txt') str = 'Español';
    if (val === 'cultural.txt') str = 'Português';
    if (val === 'enchanted.txt') str = 'Typewriter';
    if (val === 'moschustier.txt') str = 'Deutsch';
    if (val === 'multatuli.txt') str = 'Nederland';
    if (val === 'norppa.txt') str = 'Suomi';
    if (val === 'oz.txt') str = 'Wizard of Oz';
    if (val === 'prigione.txt') str = 'Italiano';
    if (val ==='sentences.txt') str = 'Sentences';
    if (val === 'testtext.txt') str = 'Test';
    if (val === 'tiger.txt') str = 'Tigers';
    if (val === 'words.txt') str = 'Words';
    if (val === 'zebra.txt') str = 'Zebra';

    if (str === ''){
        str = val.substr(0, val.indexOf('.txt'));

        if (str === 'culture' || str === 'sport' || str === 'nature' || str === 'Technology' || str === 'themeMixed'){
            str = 'themed';
        }
    }

    if (str === 'Aesop' || str === 'Baseball' || str === 'Astronauts' || str === 'Tigers'
        || str === 'Wizard of Oz' || str === 'Zebra' || str === 'Typewriter'){
        str = 'story';
    }
    return str;
}

function saveTry() {
    /*
    var testData = {
        "speed": [90, 20, 30, 40, 40],
        "date": [1567301443000, 1567387843000, 1567474243000, 1569803443000, 1569807043000]
    };

    /**/

    /*
    var testData = {
        "speed": [90, 20],
        "date": [1567301443000, 1567387843000]
    };

    */

    /*
    var testData = {
        "speed": [80, 55, 10, 20, 30, 40, 40],
        "date": [['01.01.2019', '09:15'], ['01.01.2019', '10:25'],
            ['01.01.2019', '11:32'], ['01.01.2019', '11:38'], ['01.01.2019', '11:45'],
            ['01.01.2019', '13:28'], ['01.01.2019', '13:33']]
    };

    /**/

    /*
    var testStr = JSON.stringify(testData);

    localStorage.setItem('try4', testStr);
    /**/


    //localStorage.clear();

    //save attempt
    var dataArray = {};
    var data = localStorage.getItem('try5');
    if (data) dataArray = JSON.parse(data);
    else
    {
        dataArray.speed = [];
        dataArray.date = [];
        dataArray.gspeed = [];
        dataArray.err = [];
        dataArray.text = [];
    }

    if ((typeof gwpm !== 'undefined') && (gwpm) && (gwpm > 0)) {
        dataArray.speed.push(parseInt(nwpm));
        dataArray.date.push(parseInt(date));
        dataArray.gspeed.push(parseInt(gwpm));
        dataArray.err.push(parseInt(err));
        dataArray.text.push(getTextLabel(textfile));
    }

    localStorage.setItem('try5', JSON.stringify(dataArray));

    var outputDate = [];
    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
    var curDate = new Date();
    for (var i = 0; i < dataArray.date.length; i ++)
    {
        var str = '';
        var arrDate = new Date();
        arrDate.setTime(dataArray.date[i]);


        if ((curDate.getFullYear() == arrDate.getFullYear()) && (curDate.getMonth() == arrDate.getMonth()) &&
            curDate.getDate() == arrDate.getDate())
        {//show time
            var hours = arrDate.getHours();
            var minutes = arrDate.getMinutes();
            var ampm = hours >= 12 ? 'pm' : 'am';
            hours = hours % 12;
            hours = hours ? hours : 12; // the hour '0' should be '12'
            minutes = minutes < 10 ? '0'+minutes : minutes;
            str = hours + ':' + minutes + ' ' + ampm;
        }else
        {// show month/day
            var day = arrDate.getDate();
            day = day < 10 ? '0'+day : day;
            str = months[arrDate.getMonth()]  + ' ' + day;
        }
        outputDate.push(str);
    }

    dataArray.date = outputDate;

    _isSaveTry = true;
    _dataTryArray = dataArray;

    return dataArray;
}

function initChart(){
    let dataArray = [];
    if (_isSaveTry){
        dataArray = _dataTryArray;
    }
    else {
        dataArray = saveTry();
    }

    var arr = {};

    if (dataArray.speed.length > 5)
    {
        arr.speed = dataArray.speed.slice(-5);
        arr.date = dataArray.date.slice(-5);
        arr.gspeed = dataArray.gspeed.slice(-5);
        arr.err = dataArray.err.slice(-5);
        arr.text = dataArray.text.slice(-5);
    }else {
        arr.speed = dataArray.speed;
        arr.date = dataArray.date;
        arr.gspeed = dataArray.gspeed;
        arr.err = dataArray.err;
        arr.text = dataArray.text;
    }

    //detect best result
    //if (dataArray.speed.length > 5)
    {
        var bestVal = -1;
        var bestIdx = -1;
        for (var i = 0; i < dataArray.speed.length; i++) {
            if (dataArray.speed[i] >= bestVal) {
                bestVal = dataArray.speed[i];
                bestIdx = i;
            }
        }

        if (dataArray.speed.length >= 5) {
            if (bestIdx < (dataArray.speed.length - 5)) {
                arr.speed[0] = dataArray.speed[bestIdx];
                arr.date[0] = [dataArray.date[0], 'BEST'];
                arr.gspeed[0] = dataArray.gspeed[bestIdx];
                arr.err[0] = dataArray.err[bestIdx];
                arr.text[0] = dataArray.text[bestIdx];
            }
            else {
                arr.date[bestIdx - dataArray.speed.length + 5] = [dataArray.date[bestIdx], 'BEST'];
            }
        }
        else
        {
            if (arr.date.length > 1) arr.date[bestIdx] = [dataArray.date[bestIdx], 'BEST'];
        }

    }


    var ctx = document.getElementById('graph').getContext('2d');

    var greenGradient = ctx.createLinearGradient(0, 0, 0, 200);
    greenGradient.addColorStop(0, "#83d936");
    greenGradient.addColorStop(0.45, "#9de75b");
    greenGradient.addColorStop(0.55, "#bbf28b");
    greenGradient.addColorStop(0.75, "#dbffbb");
    greenGradient.addColorStop(1, "#eeffde");

    var blueGradient = ctx.createLinearGradient(0, 0, 0, 110);
    blueGradient.addColorStop(0, "#808080");
    blueGradient.addColorStop(1, "#C8C8C8");

    var backGradient = ctx.createLinearGradient(0, 0, 0, 110);
    //backGradient.addColorStop(0, "#d5edf2");
    //backGradient.addColorStop(1, "#c1e0e6");
    backGradient.addColorStop(0, "rgba(213,237,242, 0)");
    backGradient.addColorStop(1, "rgba(193,224,230, 1");

    new Chart(ctx, createConfig(arr, greenGradient, blueGradient, backGradient));

}